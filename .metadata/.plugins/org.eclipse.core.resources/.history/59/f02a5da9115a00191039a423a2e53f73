package encryption;
import javax.script.*;
import static java.lang.System.*;
import java.security.*;
import java.util.Scanner;

import javax.crypto.*;
import org.apache.commons.codec.binary.*;
import org.apache.commons.codec.digest.Crypt;

import contro.commentsClient;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
public class rSecret {
	private static String params;
	private static String encSecKey;
	private static String ida;
	private static String li;
	private static int of;
	private static String u;
	private static String tot;
	private static ScriptEngineManager manager=new ScriptEngineManager();
	static {
		ScriptEngine jseng=manager.getEngineByName("javascript");
		if(jseng!=null) {
			out.println("wu");
		}
		if(!(jseng instanceof Invocable)) {
			out.println("NO SUPPORT INVOCABLE");
		}
		Bindings bind=jseng.createBindings();
		bind.put("factor", 2);
		jseng.setBindings(bind, ScriptContext.ENGINE_SCOPE);
		//Scanner input=new Scanner(System.in);
		/*while(input.hasNext()) {
			ida=input.nextLine();
			out.println("传入id："+ida);
			of=input.nextInt();
			out.println("传入id："+of);*/
		of=0;
			while(true) {
				String ims=""+of*20+"";
				if(of==0) {
					tot="true";
				}else if(of<=40){
					tot="false";
				}else {
					break;
				}
				of++;
		ida="29343374";
				u="https://music.163.com/weapi/v1/resource/comments/R_SO_4_29343374?csrf_token=";
			try {
				jseng.eval(new FileReader("D:/ListenWorld/js/encode.js"));
				if((jseng instanceof Invocable)) {
					Invocable inv=(Invocable)jseng;
					try {
						inv.invokeFunction("enterData", ida,"20",""+of,tot);
						params=(String) inv.invokeFunction("paramssend");
						encSecKey=(String)inv.invokeFunction("encSecKeysend");
						new commentsClient(u,params,encSecKey);
					} catch (NoSuchMethodException e) {
						e.printStackTrace();
					}
				}
			} catch (FileNotFoundException e) {
				e.printStackTrace();
			} catch (ScriptException e) {
				e.printStackTrace();
			}
			}
	}
	public static void main(String argv[]) {
	}
}
